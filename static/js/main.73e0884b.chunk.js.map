{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","className","text","weight","uuidv4","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","ReactDOM","render","document","getElementById"],"mappings":"0OAiBeA,EAdO,SAAC,GACnB,OADqC,EAAjBC,YACDC,KAAI,SAAAC,GACnB,OACI,qBACAC,UAAU,kBADV,UAEI,oBAAIA,UAAU,kBAAd,SACCD,EAAWE,OACZ,qBAAID,UAAU,oBAAd,qBACCD,EAAWG,YALPC,mBCcNC,EAjBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,OAGeH,EAAOA,OAAzCI,EAHmB,EAGnBA,MAAOC,EAHY,EAGZA,MAAOC,EAHK,EAGLA,IAAKd,EAHA,EAGAA,YACzB,OACI,sBAAKG,UAAU,SAAf,UACI,6BAAKS,IACL,qBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,mBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,uBAAlC,iBAGA,wBAAQC,QAAS,kBAAMT,GAASD,IAAhC,yBACCA,GAAQ,cAAC,EAAD,CAAeV,YAAaA,QCLlCqB,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,qBAAKnB,UAAU,QAAf,SACI,6BAAKmB,OCuDFC,EArDH,WAAO,IAAD,EACYd,mBAAS,IADrB,mBACPe,EADO,KACAC,EADA,OAEgBhB,mBAAS,IAFzB,mBAEPiB,EAFO,KAEEC,EAFF,OAGYlB,mBAAS,IAHrB,mBAGPa,EAHO,KAGAM,EAHA,KASRd,EAAG,0CAAsCU,EAAtC,mBAJM,WAIN,oBAFO,oCAIVK,EAAO,uCAAG,4BAAAC,EAAA,yDACC,KAAVN,EADS,iCAEaO,IAAMC,IAAIlB,GAFvB,WAEFmB,EAFE,QAGGC,KAAKC,KAHR,yCAIGP,EAAS,2DAJZ,OAMRD,EAAWM,EAAOC,KAAKE,MACvBC,QAAQC,IAAIL,GACZL,EAAS,IACTH,EAAS,IATD,wBAWJG,EAAS,8BAXL,4CAAH,qDAyBb,OACI,sBAAKzB,UAAU,MAAf,UACI,8CACA,uBAAMA,UAAU,cAAcoC,SARrB,SAACC,GACdA,EAAEC,iBACFZ,KAMI,UACe,KAAVP,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,uBAAOoB,KAAK,OAAOC,YAAY,cAAcC,aAAa,MAAMC,SAd3D,SAACL,GACdf,EAASe,EAAEtB,OAAO4B,QAa0EA,MAAOtB,IAC3F,uBAAOkB,KAAK,SAASI,MAAM,cAE/B,qBAAK3C,UAAU,UAAf,SACKuB,IAAY,IAAMA,EAAQzB,KAAI,SAAAO,GAAM,OACrC,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,wBCjD7ByC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.73e0884b.chunk.js","sourcesContent":["import React from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nconst RecipeDetails = ({ingredients}) => {\n    return ingredients.map(ingredient => { \n        return (\n            <ul key={uuidv4()} \n            className=\"ingredient-list\">\n                <li className=\"ingredient-text\">\n                {ingredient.text}</li>\n                <li className=\"ingredient-weight\">Weight - \n                {ingredient.weight}</li>\n            </ul>\n        )\n    })\n}\n\nexport default RecipeDetails\n","import React, {useState} from 'react'\nimport RecipeDetails from './RecipeDetails'\n\nconst Recipe = ({recipe}) => {\n    const [show, setShow] = useState(false)\n\n    const{label, image, url, ingredients} = recipe.recipe;\n    return (\n        <div className=\"recipe\">\n            <h2>{label}</h2>\n            <img src={image} alt={label}/>\n            <a href={url} target=\"_blank\" rel=\"no opener noreferrer\">\n                URL\n            </a>\n            <button onClick={() => setShow(!show)}>Ingredients</button>\n            {show && <RecipeDetails ingredients={ingredients}/>}\n        </div>\n    );\n};\n\nexport default Recipe\n","import React from 'react'\n\nconst Alert = ({alert}) => {\n    return (\n        <div className=\"alert\">\n            <h3>{alert}</h3>\n        </div>\n    )\n}\n\nexport default Alert\n","import React, {useState} from 'react'\nimport \"./App.css\"\nimport Axios from 'axios'\nimport {v4 as uuidv4} from 'uuid'\nimport Recipe from './components/Recipe'\nimport Alert from './components/Alert'\n\nconst App = () => {\n    const [query, setQuery] = useState(\"\")\n    const [recipes, setRecipes] = useState([]);\n    const [alert, setAlert] = useState(\"\")\n\n    const APP_ID = \"1825e417\"\n\n    const APP_KEY = \"3d7d0b78df6651723151099f590faf3c\"\n\n    const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\n    const getData = async () => {\n        if(query !== \"\") { \n            const result = await Axios.get(url);\n            if(!result.data.more) { \n                return setAlert('Food not recognised, please try again for more recipes');\n            }\n            setRecipes(result.data.hits)\n            console.log(result)\n            setAlert(\"\");\n            setQuery(\"\");\n            } else { \n                setAlert('Please search for a recipe')\n            }\n       \n    }\n\n    const onChange = (e) => { \n        setQuery(e.target.value);\n    }\n\n    const onSubmit = (e) => { \n        e.preventDefault();\n        getData();\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Food Recipes</h1>\n            <form className=\"search-form\" onSubmit={onSubmit}>\n                {alert !== \"\" && <Alert alert={alert}/>}\n                <input type=\"text\" placeholder=\"Search Food\" autoComplete=\"off\" onChange={onChange} value={query}/>\n                <input type=\"submit\" value=\"search\"/>\n            </form>\n            <div className=\"recipes\">\n                {recipes !== [] && recipes.map(recipe => \n                <Recipe key={uuidv4()} recipe={recipe} />)}\n\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n"],"sourceRoot":""}